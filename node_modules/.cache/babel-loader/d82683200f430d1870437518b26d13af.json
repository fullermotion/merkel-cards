{"ast":null,"code":"var _jsxFileName = \"/Users/garyfuller/Desktop/fe-merkel-test/myapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from \"react\"; // https://assets.codepen.io/1082881/data.json\n// 1. Fetch the data from endpoint\n// 2. Get the items array from the data\n// 3. Filter items array to only contain products on sale (hasDiscount === true)\n// 4. Loop over items, generate HTML with JS, and insert into the dom\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const getDataFromServer = await fetchCardData();\n      const traversedData = getDataFromServer.some.place.pretty.nested.items;\n      const data = traversedData.filter(item => item.hasDiscount === true);\n      setCards(data);\n    };\n\n    getData();\n  }, []);\n\n  const fetchCardData = async () => {\n    const response = await fetch('https://assets.codepen.io/1082881/data.json');\n    return await response.json();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Front-end Code Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Parse and Render Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.image,\n          alt: card.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: card.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, card.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"M51NroWgc5aUEHiqsZiaQ+7WeWA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","App","cards","setCards","getData","getDataFromServer","fetchCardData","traversedData","some","place","pretty","nested","items","data","filter","item","hasDiscount","response","fetch","json","map","card","image","title","description","price","id"],"sources":["/Users/garyfuller/Desktop/fe-merkel-test/myapp/src/App.js"],"sourcesContent":["import './App.css';\nimport {useEffect, useState} from \"react\";\n\n// https://assets.codepen.io/1082881/data.json\n// 1. Fetch the data from endpoint\n// 2. Get the items array from the data\n// 3. Filter items array to only contain products on sale (hasDiscount === true)\n// 4. Loop over items, generate HTML with JS, and insert into the dom\n\n\nfunction App() {\n    const [cards, setCards] = useState([]);\n\n    useEffect(() => {\n        const getData = async () => {\n            const getDataFromServer = await fetchCardData();\n            const traversedData = getDataFromServer.some.place.pretty.nested.items;\n            const data = traversedData.filter(item => item.hasDiscount === true);\n\n            setCards(data);\n        };\n        getData();\n\n    }, []);\n\n    const fetchCardData = async () => {\n        const response = await fetch('https://assets.codepen.io/1082881/data.json');\n        return await response.json();\n    };\n\n\n    return (\n        <div className=\"App\">\n            <h1>Front-end Code Test</h1>\n            <h3>Parse and Render Test</h3>\n            <>\n\n                {cards.map(card =>\n                    <div className=\"card\" key={card.id}>\n                        <img src={card.image} alt={card.title}/>\n                        <h3>{card.title}</h3>\n                        <p>{card.description}</p>\n                        <p>{card.price}</p>\n                    </div>\n                )}\n            </>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC,C,CAEA;AACA;AACA;AACA;AACA;;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMK,OAAO,GAAG,YAAY;MACxB,MAAMC,iBAAiB,GAAG,MAAMC,aAAa,EAA7C;MACA,MAAMC,aAAa,GAAGF,iBAAiB,CAACG,IAAlB,CAAuBC,KAAvB,CAA6BC,MAA7B,CAAoCC,MAApC,CAA2CC,KAAjE;MACA,MAAMC,IAAI,GAAGN,aAAa,CAACO,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACC,WAAL,KAAqB,IAAlD,CAAb;MAEAb,QAAQ,CAACU,IAAD,CAAR;IACH,CAND;;IAOAT,OAAO;EAEV,CAVQ,EAUN,EAVM,CAAT;;EAYA,MAAME,aAAa,GAAG,YAAY;IAC9B,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA5B;IACA,OAAO,MAAMD,QAAQ,CAACE,IAAT,EAAb;EACH,CAHD;;EAMA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,UAEKjB,KAAK,CAACkB,GAAN,CAAUC,IAAI,iBACX;QAAK,SAAS,EAAC,MAAf;QAAA,wBACI;UAAK,GAAG,EAAEA,IAAI,CAACC,KAAf;UAAsB,GAAG,EAAED,IAAI,CAACE;QAAhC;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,UAAKF,IAAI,CAACE;QAAV;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAA,UAAIF,IAAI,CAACG;QAAT;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII;UAAA,UAAIH,IAAI,CAACI;QAAT;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA,GAA2BJ,IAAI,CAACK,EAAhC;QAAA;QAAA;QAAA;MAAA,QADH;IAFL,iBAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GAtCQzB,G;;KAAAA,G;AAwCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}